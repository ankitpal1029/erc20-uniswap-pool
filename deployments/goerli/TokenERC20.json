{
  "address": "0xD83f39EC5c915A01735C6Ab6CFf190723D1a0633",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "initialSupply",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "tokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenSymbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "approveAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xe06163de7b2ba371981450d72a7e2a1261982c9a673433293a14e4c997a5c26c",
  "receipt": {
    "to": null,
    "from": "0x657D3C03e450E4815f3411Aa26713A2A90e9Ad83",
    "contractAddress": "0xD83f39EC5c915A01735C6Ab6CFf190723D1a0633",
    "transactionIndex": 6,
    "gasUsed": "1328570",
    "logsBloom": "0x
    "blockHash": "0x9a061f360c210b0ce5a9e036751c8403cb80af25b2b1d406aefb1c5bb17d8304",
    "transactionHash": "0xe06163de7b2ba371981450d72a7e2a1261982c9a673433293a14e4c997a5c26c",
    "logs": [],
    "blockNumber": 7235849,
    "cumulativeGasUsed": "3676373",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "100000000000000000000",
    "Silver Babyy",
    "SB"
  ],
  "numDeployments": 1,
  "solcInputHash": "0849be52c8971ae029565367fd4bd9ea",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"params\":{\"_spender\":\"The address authorized to spend\",\"_value\":\"the max amount they can spend\"}},\"approveAndCall(address,uint256,bytes)\":{\"params\":{\"_extraData\":\"some extra information to send to the approved contract\",\"_spender\":\"The address authorized to spend\",\"_value\":\"the max amount they can spend\"}},\"burn(uint256)\":{\"params\":{\"_value\":\"the amount of money to burn\"}},\"burnFrom(address,uint256)\":{\"params\":{\"_from\":\"the address of the sender\",\"_value\":\"the amount of money to burn\"}},\"transfer(address,uint256)\":{\"params\":{\"_to\":\"The address of the recipient\",\"_value\":\"the amount to send\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"_from\":\"The address of the sender\",\"_to\":\"The address of the recipient\",\"_value\":\"the amount to send\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"Set allowance for other address Allows `_spender` to spend no more than `_value` tokens on your behalf\"},\"approveAndCall(address,uint256,bytes)\":{\"notice\":\"Set allowance for other address and notify Allows `_spender` to spend no more than `_value` tokens on your behalf, and then ping the contract about it\"},\"burn(uint256)\":{\"notice\":\"Destroy tokens Remove `_value` tokens from the system irreversibly\"},\"burnFrom(address,uint256)\":{\"notice\":\"Destroy tokens from other account Remove `_value` tokens from the system irreversibly on behalf of `_from`.\"},\"constructor\":{\"notice\":\"Constructor function Initializes contract with initial supply tokens to the creator of the contract\"},\"transfer(address,uint256)\":{\"notice\":\"Transfer tokens Send `_value` tokens to `_to` from your account\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer tokens from other address Send `_value` tokens to `_to` on behalf of `_from`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenERC20.sol\":\"TokenERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TokenERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\ninterface tokenRecipient {\\n    function receiveApproval(\\n        address _from,\\n        uint256 _value,\\n        address _token,\\n        bytes calldata _extraData\\n    ) external;\\n}\\n\\ncontract TokenERC20 {\\n    string public name;\\n    string public symbol;\\n    uint8 public decimals = 18;\\n    uint256 public totalSupply;\\n\\n    // This creates an array with all balances\\n    mapping(address => uint256) public balanceOf;\\n    mapping(address => mapping(address => uint256)) public allowance;\\n\\n    // This generates a public event on the blockchain that will notify clients\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    // This generates a public event on the blockchain that will notify clients\\n    event Approval(\\n        address indexed _owner,\\n        address indexed _spender,\\n        uint256 _value\\n    );\\n\\n    // This notifies clients about the amount burnt\\n    event Burn(address indexed from, uint256 value);\\n\\n    /**\\n     * Constructor function\\n     *\\n     * Initializes contract with initial supply tokens to the creator of the contract\\n     */\\n    constructor(\\n        uint256 initialSupply,\\n        string memory tokenName,\\n        string memory tokenSymbol\\n    ) {\\n        totalSupply = initialSupply * 10**uint256(decimals); // Update total supply with the decimal amount\\n        balanceOf[msg.sender] = totalSupply; // Give the creator all initial tokens\\n        name = tokenName; // Set the name for display purposes\\n        symbol = tokenSymbol; // Set the symbol for display purposes\\n    }\\n\\n    /**\\n     * Internal transfer, only can be called by this contract\\n     */\\n    function _transfer(\\n        address _from,\\n        address _to,\\n        uint256 _value\\n    ) internal {\\n        require(_to != address(0x0));\\n        require(balanceOf[_from] >= _value);\\n        require(balanceOf[_to] + _value >= balanceOf[_to]);\\n        uint256 previousBalances = balanceOf[_from] + balanceOf[_to];\\n        balanceOf[_from] -= _value;\\n        balanceOf[_to] += _value;\\n        emit Transfer(_from, _to, _value);\\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\\n    }\\n\\n    /**\\n     * Transfer tokens\\n     *\\n     * Send `_value` tokens to `_to` from your account\\n     *\\n     * @param _to The address of the recipient\\n     * @param _value the amount to send\\n     */\\n    function transfer(address _to, uint256 _value)\\n        public\\n        returns (bool success)\\n    {\\n        _transfer(msg.sender, _to, _value);\\n        return true;\\n    }\\n\\n    /**\\n     * Transfer tokens from other address\\n     *\\n     * Send `_value` tokens to `_to` on behalf of `_from`\\n     *\\n     * @param _from The address of the sender\\n     * @param _to The address of the recipient\\n     * @param _value the amount to send\\n     */\\n    function transferFrom(\\n        address _from,\\n        address _to,\\n        uint256 _value\\n    ) public returns (bool success) {\\n        require(_value <= allowance[_from][msg.sender]); // Check allowance\\n        allowance[_from][msg.sender] -= _value;\\n        _transfer(_from, _to, _value);\\n        return true;\\n    }\\n\\n    /**\\n     * Set allowance for other address\\n     *\\n     * Allows `_spender` to spend no more than `_value` tokens on your behalf\\n     *\\n     * @param _spender The address authorized to spend\\n     * @param _value the max amount they can spend\\n     */\\n    function approve(address _spender, uint256 _value)\\n        public\\n        returns (bool success)\\n    {\\n        allowance[msg.sender][_spender] = _value;\\n        emit Approval(msg.sender, _spender, _value);\\n        return true;\\n    }\\n\\n    /**\\n     * Set allowance for other address and notify\\n     *\\n     * Allows `_spender` to spend no more than `_value` tokens on your behalf, and then ping the contract about it\\n     *\\n     * @param _spender The address authorized to spend\\n     * @param _value the max amount they can spend\\n     * @param _extraData some extra information to send to the approved contract\\n     */\\n    function approveAndCall(\\n        address _spender,\\n        uint256 _value,\\n        bytes memory _extraData\\n    ) public returns (bool success) {\\n        tokenRecipient spender = tokenRecipient(_spender);\\n        if (approve(_spender, _value)) {\\n            spender.receiveApproval(\\n                msg.sender,\\n                _value,\\n                address(this),\\n                _extraData\\n            );\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * Destroy tokens\\n     *\\n     * Remove `_value` tokens from the system irreversibly\\n     *\\n     * @param _value the amount of money to burn\\n     */\\n    function burn(uint256 _value) public returns (bool success) {\\n        require(balanceOf[msg.sender] >= _value); // Check if the sender has enough\\n        balanceOf[msg.sender] -= _value; // Subtract from the sender\\n        totalSupply -= _value; // Updates totalSupply\\n        emit Burn(msg.sender, _value);\\n        return true;\\n    }\\n\\n    /**\\n     * Destroy tokens from other account\\n     *\\n     * Remove `_value` tokens from the system irreversibly on behalf of `_from`.\\n     *\\n     * @param _from the address of the sender\\n     * @param _value the amount of money to burn\\n     */\\n    function burnFrom(address _from, uint256 _value)\\n        public\\n        returns (bool success)\\n    {\\n        require(balanceOf[_from] >= _value);\\n        require(_value <= allowance[_from][msg.sender]);\\n        balanceOf[_from] -= _value;\\n        allowance[_from][msg.sender] -= _value;\\n        totalSupply -= _value;\\n        emit Burn(_from, _value);\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0x26676f1584573685267b925d0b7e8f8ba79f4800205bc5ec1e3f8cd82e872c43\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526012600260006101000a81548160ff021916908360ff1602179055503480156200002d57600080fd5b5060405162001b6638038062001b66833981810160405281019062000053919062000390565b600260009054906101000a900460ff1660ff16600a620000749190620005ad565b83620000819190620005fe565b600381905550600354600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160009080519060200190620000e592919062000108565b508060019080519060200190620000fe92919062000108565b50505050620006c4565b82805462000116906200068e565b90600052602060002090601f0160209004810192826200013a576000855562000186565b82601f106200015557805160ff191683800117855562000186565b8280016001018555821562000186579182015b828111156200018557825182559160200191906001019062000168565b5b50905062000195919062000199565b5090565b5b80821115620001b45760008160009055506001016200019a565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b620001e181620001cc565b8114620001ed57600080fd5b50565b6000815190506200020181620001d6565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200025c8262000211565b810181811067ffffffffffffffff821117156200027e576200027d62000222565b5b80604052505050565b600062000293620001b8565b9050620002a1828262000251565b919050565b600067ffffffffffffffff821115620002c457620002c362000222565b5b620002cf8262000211565b9050602081019050919050565b60005b83811015620002fc578082015181840152602081019050620002df565b838111156200030c576000848401525b50505050565b6000620003296200032384620002a6565b62000287565b9050828152602081018484840111156200034857620003476200020c565b5b62000355848285620002dc565b509392505050565b600082601f83011262000375576200037462000207565b5b81516200038784826020860162000312565b91505092915050565b600080600060608486031215620003ac57620003ab620001c2565b5b6000620003bc86828701620001f0565b935050602084015167ffffffffffffffff811115620003e057620003df620001c7565b5b620003ee868287016200035d565b925050604084015167ffffffffffffffff811115620004125762000411620001c7565b5b62000420868287016200035d565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b6001851115620004b85780860481111562000490576200048f6200042a565b5b6001851615620004a05780820291505b8081029050620004b08562000459565b945062000470565b94509492505050565b600082620004d35760019050620005a6565b81620004e35760009050620005a6565b8160018114620004fc576002811462000507576200053d565b6001915050620005a6565b60ff8411156200051c576200051b6200042a565b5b8360020a9150848211156200053657620005356200042a565b5b50620005a6565b5060208310610133831016604e8410600b8410161715620005775782820a9050838111156200057157620005706200042a565b5b620005a6565b62000586848484600162000466565b92509050818404811115620005a0576200059f6200042a565b5b81810290505b9392505050565b6000620005ba82620001cc565b9150620005c783620001cc565b9250620005f67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484620004c1565b905092915050565b60006200060b82620001cc565b91506200061883620001cc565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156200065457620006536200042a565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620006a757607f821691505b60208210811415620006be57620006bd6200065f565b5b50919050565b61149280620006d46000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101a357806379cc6790146101d357806395d89b4114610203578063a9059cbb14610221578063cae9ca5114610251578063dd62ed3e14610281576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce5671461015557806342966c6814610173575b600080fd5b6100c16102b1565b6040516100ce9190610e31565b60405180910390f35b6100f160048036038101906100ec9190610efb565b61033f565b6040516100fe9190610f56565b60405180910390f35b61010f610431565b60405161011c9190610f80565b60405180910390f35b61013f600480360381019061013a9190610f9b565b610437565b60405161014c9190610f56565b60405180910390f35b61015d61056b565b60405161016a919061100a565b60405180910390f35b61018d60048036038101906101889190611025565b61057e565b60405161019a9190610f56565b60405180910390f35b6101bd60048036038101906101b89190611052565b610692565b6040516101ca9190610f80565b60405180910390f35b6101ed60048036038101906101e89190610efb565b6106aa565b6040516101fa9190610f56565b60405180910390f35b61020b6108db565b6040516102189190610e31565b60405180910390f35b61023b60048036038101906102369190610efb565b610969565b6040516102489190610f56565b60405180910390f35b61026b600480360381019061026691906111b4565b610980565b6040516102789190610f56565b60405180910390f35b61029b60048036038101906102969190611223565b610a19565b6040516102a89190610f80565b60405180910390f35b600080546102be90611292565b80601f01602080910402602001604051908101604052809291908181526020018280546102ea90611292565b80156103375780601f1061030c57610100808354040283529160200191610337565b820191906000526020600020905b81548152906001019060200180831161031a57829003601f168201915b505050505081565b600081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161041f9190610f80565b60405180910390a36001905092915050565b60035481565b6000600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211156104c257600080fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461054e91906112f3565b92505081905550610560848484610a3e565b600190509392505050565b600260009054906101000a900460ff1681565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156105cc57600080fd5b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461061b91906112f3565b92505081905550816003600082825461063491906112f3565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5836040516106819190610f80565b60405180910390a260019050919050565b60046020528060005260406000206000915090505481565b600081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156106f857600080fd5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111561078157600080fd5b81600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107d091906112f3565b9250508190555081600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461086391906112f3565b92505081905550816003600082825461087c91906112f3565b925050819055508273ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5836040516108c99190610f80565b60405180910390a26001905092915050565b600180546108e890611292565b80601f016020809104026020016040519081016040528092919081815260200182805461091490611292565b80156109615780601f1061093657610100808354040283529160200191610961565b820191906000526020600020905b81548152906001019060200180831161094457829003601f168201915b505050505081565b6000610976338484610a3e565b6001905092915050565b600080849050610990858561033f565b15610a10578073ffffffffffffffffffffffffffffffffffffffff16638f4ffcb1338630876040518563ffffffff1660e01b81526004016109d4949392919061138b565b600060405180830381600087803b1580156109ee57600080fd5b505af1158015610a02573d6000803e3d6000fd5b505050506001915050610a12565b505b9392505050565b6005602052816000526040600020602052806000526040600020600091509150505481565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a7857600080fd5b80600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610ac457600080fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b4f91906113d7565b1015610b5a57600080fd5b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610be691906113d7565b905081600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c3791906112f3565b9250508190555081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c8d91906113d7565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610cf19190610f80565b60405180910390a380600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d8491906113d7565b14610d9257610d9161142d565b5b50505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610dd2578082015181840152602081019050610db7565b83811115610de1576000848401525b50505050565b6000601f19601f8301169050919050565b6000610e0382610d98565b610e0d8185610da3565b9350610e1d818560208601610db4565b610e2681610de7565b840191505092915050565b60006020820190508181036000830152610e4b8184610df8565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e9282610e67565b9050919050565b610ea281610e87565b8114610ead57600080fd5b50565b600081359050610ebf81610e99565b92915050565b6000819050919050565b610ed881610ec5565b8114610ee357600080fd5b50565b600081359050610ef581610ecf565b92915050565b60008060408385031215610f1257610f11610e5d565b5b6000610f2085828601610eb0565b9250506020610f3185828601610ee6565b9150509250929050565b60008115159050919050565b610f5081610f3b565b82525050565b6000602082019050610f6b6000830184610f47565b92915050565b610f7a81610ec5565b82525050565b6000602082019050610f956000830184610f71565b92915050565b600080600060608486031215610fb457610fb3610e5d565b5b6000610fc286828701610eb0565b9350506020610fd386828701610eb0565b9250506040610fe486828701610ee6565b9150509250925092565b600060ff82169050919050565b61100481610fee565b82525050565b600060208201905061101f6000830184610ffb565b92915050565b60006020828403121561103b5761103a610e5d565b5b600061104984828501610ee6565b91505092915050565b60006020828403121561106857611067610e5d565b5b600061107684828501610eb0565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6110c182610de7565b810181811067ffffffffffffffff821117156110e0576110df611089565b5b80604052505050565b60006110f3610e53565b90506110ff82826110b8565b919050565b600067ffffffffffffffff82111561111f5761111e611089565b5b61112882610de7565b9050602081019050919050565b82818337600083830152505050565b600061115761115284611104565b6110e9565b90508281526020810184848401111561117357611172611084565b5b61117e848285611135565b509392505050565b600082601f83011261119b5761119a61107f565b5b81356111ab848260208601611144565b91505092915050565b6000806000606084860312156111cd576111cc610e5d565b5b60006111db86828701610eb0565b93505060206111ec86828701610ee6565b925050604084013567ffffffffffffffff81111561120d5761120c610e62565b5b61121986828701611186565b9150509250925092565b6000806040838503121561123a57611239610e5d565b5b600061124885828601610eb0565b925050602061125985828601610eb0565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806112aa57607f821691505b602082108114156112be576112bd611263565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006112fe82610ec5565b915061130983610ec5565b92508282101561131c5761131b6112c4565b5b828203905092915050565b61133081610e87565b82525050565b600081519050919050565b600082825260208201905092915050565b600061135d82611336565b6113678185611341565b9350611377818560208601610db4565b61138081610de7565b840191505092915050565b60006080820190506113a06000830187611327565b6113ad6020830186610f71565b6113ba6040830185611327565b81810360608301526113cc8184611352565b905095945050505050565b60006113e282610ec5565b91506113ed83610ec5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611422576114216112c4565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fdfea2646970667358221220a9c2133a98d6aea45b86763869be3f7129e47f2848ed60d35749ccda91b734bc64736f6c63430008090033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "params": {
          "_spender": "The address authorized to spend",
          "_value": "the max amount they can spend"
        }
      },
      "approveAndCall(address,uint256,bytes)": {
        "params": {
          "_extraData": "some extra information to send to the approved contract",
          "_spender": "The address authorized to spend",
          "_value": "the max amount they can spend"
        }
      },
      "burn(uint256)": {
        "params": {
          "_value": "the amount of money to burn"
        }
      },
      "burnFrom(address,uint256)": {
        "params": {
          "_from": "the address of the sender",
          "_value": "the amount of money to burn"
        }
      },
      "transfer(address,uint256)": {
        "params": {
          "_to": "The address of the recipient",
          "_value": "the amount to send"
        }
      },
      "transferFrom(address,address,uint256)": {
        "params": {
          "_from": "The address of the sender",
          "_to": "The address of the recipient",
          "_value": "the amount to send"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "approve(address,uint256)": {
        "notice": "Set allowance for other address Allows `_spender` to spend no more than `_value` tokens on your behalf"
      },
      "approveAndCall(address,uint256,bytes)": {
        "notice": "Set allowance for other address and notify Allows `_spender` to spend no more than `_value` tokens on your behalf, and then ping the contract about it"
      },
      "burn(uint256)": {
        "notice": "Destroy tokens Remove `_value` tokens from the system irreversibly"
      },
      "burnFrom(address,uint256)": {
        "notice": "Destroy tokens from other account Remove `_value` tokens from the system irreversibly on behalf of `_from`."
      },
      "constructor": {
        "notice": "Constructor function Initializes contract with initial supply tokens to the creator of the contract"
      },
      "transfer(address,uint256)": {
        "notice": "Transfer tokens Send `_value` tokens to `_to` from your account"
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Transfer tokens from other address Send `_value` tokens to `_to` on behalf of `_from`"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 15,
        "contract": "contracts/TokenERC20.sol:TokenERC20",
        "label": "name",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 17,
        "contract": "contracts/TokenERC20.sol:TokenERC20",
        "label": "symbol",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 20,
        "contract": "contracts/TokenERC20.sol:TokenERC20",
        "label": "decimals",
        "offset": 0,
        "slot": "2",
        "type": "t_uint8"
      },
      {
        "astId": 22,
        "contract": "contracts/TokenERC20.sol:TokenERC20",
        "label": "totalSupply",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 26,
        "contract": "contracts/TokenERC20.sol:TokenERC20",
        "label": "balanceOf",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 32,
        "contract": "contracts/TokenERC20.sol:TokenERC20",
        "label": "allowance",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}